---
import { Image } from "astro:assets";
import Mig from "../images/mig.svg";
import Squirrel from "../images/squirrel.svg";
import "../css/global.css";
import "../css/reset.css";
---

<section>
  <div class="grid1-1 flow">
    <div class="me">
      <Image src={Mig} alt="mig" />
      <div id="message-container"></div>
    </div>
    <div class="text">
      <div class="squirrel">
        <Image src={Squirrel} alt="squirrel" />
      </div>
      <div class="header">
        <h1>
          Hej, jeg hedder Lærke Hansen og læser til multimediedesigner, jeg er
          interesseret i webdesign og frontend kodning
        </h1>
      </div>
    </div>
  </div>
  <div id="arrow">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25"
      ><path
        style="fill:#232326"
        d="m18.294 16.793-5.293 5.293V1h-1v21.086l-5.295-5.294-.707.707L12.501 24l6.5-6.5-.707-.707z"
      ></path></svg
    >
  </div>
</section>

<style>
  @media (min-width: 481px) {
    section {
      background-color: var(--primary-color-01);
      width: 100svw;
      padding-top: 10rem;
      padding-bottom: 10rem;

      .grid1-1 {
        display: grid;
        grid-template-columns: 1fr 1fr;
        justify-items: center;
        align-items: stretch;

        img {
          max-width: 480px;
        }

        .text {
          grid-column: 2/-1;
          max-width: 500px;
          justify-items: center;
          align-items: center;
          display: grid;
          grid-template-rows: repeat(3, auto);
          justify-self: start;

          .squirrel {
            grid-row: 2/3;
            grid-column: 1/1;
            rotate: 90deg;
          }
          .header {
            grid-row: 2/3;
            grid-column: 1/1;
            z-index: 10;
          }
        }
      }
      #message-container {
        display: none;
      }
    }

    #arrow {
      max-width: 5%;
      padding-left: 30px;
      padding-bottom: 0%;
      animation: arrow 4s ease-in-out infinite;
      cursor: pointer;
    }

    @keyframes arrow {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-80px);
      }
      100% {
        transform: translateY(0);
      }
    }
  }

  @media (max-width: 480px) {
    section {
      background-color: var(--primary-color-01);
      width: 100svw;
      padding-top: 3rem;
      padding-bottom: 3rem;

      .grid1-1 {
        display: grid;
        justify-items: center;
        align-items: stretch;

        img {
          max-width: 480px;
          z-index: 11;
        }

        .text {
          max-width: 500px;
          justify-items: center;
          align-items: center;
          display: grid;
          justify-self: start;

          .squirrel {
            grid-row: 2/3;
            grid-column: 1/1;
          }
          .header {
            grid-row: 2/3;
            grid-column: 1/1;
            z-index: 10;

            @layer component {
              h1 {
                font-size: var(--size-4);
                padding: 82px 82px;
              }
            }
          }
        }
      }
    }
    .me {
      display: grid;
      grid-template-columns: 20% auto;

      .visible {
        opacity: 1;
      }
      #message-container {
        background-color: var(--primary-color-03);
        color: #333;
        padding: 4px;
        border-radius: 5px;
        margin: 10px 0;
        width: fit-content;
        height: fit-content;
        font-family: Questrial;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        opacity: 1;
        transition: opacity 0.5s ease;
      }

      .grid1-1 .me > img:first-of-type {
        max-width: 20%;
        position: sticky;
        top: 0px;
        justify-self: start;
        margin: 1rem;
      }
    }
  }
</style>

<script>
  import { array } from "astro:schema";

  // Beskedindhold
  const messages = [
    "Heej, fun facts om mig:)",
    "Jeg elsker at lære nyt!",
    "Jeg elsker al mad, men mest pizza",
    "Jeg elsker farverne gul og blå:)",
  ];

  let messageIndex = 0;

  // Funktion til at vise en besked
  function showMessage() {
    const container = document.getElementById("message-container");

    // Opret et nyt beskedelement
    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message");
    messageDiv.textContent = messages[messageIndex];
    container.appendChild(messageDiv);

    // Gør beskeden synlig efter den er tilføjet
    setTimeout(() => {
      messageDiv.classList.add("visible");
    }, 100); // Lille forsinkelse for at lade transition-effekten fungere

    // Fjern beskeden efter 8 sekunder
    setTimeout(() => {
      messageDiv.classList.remove("visible");
      setTimeout(() => container.removeChild(messageDiv), 500); // Giv tid til at forsvinde visuelt
    }, 8000); // Beskeden forsvinder efter 8 sekunder

    // Opdater beskedindekset for den næste besked
    messageIndex = (messageIndex + 1) % messages.length;
  }

  // Start med at vise beskeder hver 10. sekund
  setInterval(showMessage, 10000);
</script>
